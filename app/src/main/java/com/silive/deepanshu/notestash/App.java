package com.silive.deepanshu.notestash;

import android.app.Activity;
import android.app.Application;

import javax.inject.Inject;

import dagger.android.AndroidInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.HasActivityInjector;

/**
 * Created by deepanshu on 3/5/18.
 */

/**
 * Entry point of all dependency injection is the App.
 * It implements HasActivityInjector that provides a dagger injected DispatchingAndroidInjector<Activity>.
 * This indicates that activities are to participate in dagger.android injection.
 */

public class App extends Application implements HasActivityInjector {

    @Inject
    DispatchingAndroidInjector<Activity> activityInjector;

    /**
     * The top-most level injection occurs in onCreate with DaggerAppComponent.create().inject(this).
     * It is a class that is generated by Dagger during compile-time based on the AppComponent
     */
    @Override
    public void onCreate() {
        super.onCreate();
        DaggerAppComponent.create().inject(this);
    }


    @Override
    public AndroidInjector<Activity> activityInjector() {
        return null;
    }
}
